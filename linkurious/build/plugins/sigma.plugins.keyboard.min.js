(function(){"use strict";function a(a,d,f){function g(b){sigma.misc.animation.camera(a.camera,{x:a.camera.x+(b.x||0),y:a.camera.y+(b.y||0),ratio:a.camera.ratio*(b.ratio||1)},{duration:b.duration})}function h(){g({x:-f.displacement,duration:f.duration})}function i(){g({y:-f.displacement,duration:f.duration})}function j(){g({x:f.displacement,duration:f.duration})}function k(){g({y:f.displacement,duration:f.duration})}function l(){g({ratio:1/f.zoomingRatio,duration:f.duration})}function m(){g({ratio:f.zoomingRatio,duration:f.duration})}f=sigma.utils.extend(f,c),f.zoomingRatio=f.zoomingRatio||a.settings("zoomingRatio"),f.duration=f.duration||a.settings("mouseZoomDuration"),this.domElt=d.container;var n=this;sigma.classes.dispatcher.extend(this),this.keyDown=function(a){9===a.which||18===a.which||20===a.which||e[a.which]||(e[a.which]=!0,b=Object.keys(e).join("+"),n.dispatchEvent(b))},this.keyUp=function(a){delete e[a.which],b=null},this.focus=function(){return n.domElt.focus(),!0},this.blur=function(){return n.domElt.blur(),!0},this.domElt.tabIndex=f.tabIndex,this.domElt.focus(),this.domElt.addEventListener("mouseover",this.focus,!1),this.domElt.addEventListener("mouseout",this.blur,!1),this.domElt.addEventListener("keydown",this.keyDown,!1),this.domElt.addEventListener("keyup",this.keyUp,!1),this.bind("37 18+37",h),this.bind("38 18+38",i),this.bind("39 18+39",j),this.bind("40 18+40",k),this.bind("32+38 18+32+38",l),this.bind("32+40 18+32+40",m)}if("undefined"==typeof sigma)throw"sigma.plugins.keyboard: sigma is not declared";sigma.utils.pkg("sigma.plugins");var b,c={displacement:100,duration:200,zoomingRatio:1.7,tabIndex:-1},d={},e=[];sigma.plugins.keyboard=function(b,c,e){return d[b.id]||(d[b.id]=new a(b,c,e),b.bind("kill",function(){sigma.plugins.killKeyboard(b)})),d[b.id]},sigma.plugins.killKeyboard=function(b){d[b.id]instanceof a&&(d[b.id].unbind(),d[b.id].domElt.removeEventListener("mouseover",d[b.id].focus,!1),d[b.id].domElt.removeEventListener("mouseout",d[b.id].blur,!1),d[b.id].domElt.removeEventListener("keydown",d[b.id].keyDown,!1),d[b.id].domElt.removeEventListener("keyup",d[b.id].keyUp,!1),delete d[b.id])}}).call(this);
//# sourceMappingURL=sigma.plugins.keyboard.min.js.map